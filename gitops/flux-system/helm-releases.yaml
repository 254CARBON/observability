apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus-stack
  namespace: observability
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: "45.0.0"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  values:
    prometheus:
      prometheusSpec:
        retention: 15d
        retentionSize: 10GB
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        additionalScrapeConfigs:
        - job_name: 'otel-collector'
          static_configs:
            - targets: ['otel-collector:8888']
    grafana:
      adminPassword: admin
      persistence:
        enabled: true
        size: 10Gi
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          gateway-overview:
            gnetId: 0
            revision: 1
            datasource: Prometheus
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: otel-collector
  namespace: observability
spec:
  interval: 5m
  chart:
    spec:
      chart: opentelemetry-collector
      version: "0.85.0"
      sourceRef:
        kind: HelmRepository
        name: open-telemetry
        namespace: flux-system
  values:
    mode: deployment
    replicaCount: 1
    resources:
      requests:
        memory: 512Mi
        cpu: 200m
      limits:
        memory: 1Gi
        cpu: 500m
    config:
      receivers:
        otlp:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
            http:
              endpoint: 0.0.0.0:4318
        prometheus:
          config:
            scrape_configs:
              - job_name: 'otel-collector'
                scrape_interval: 10s
                static_configs:
                  - targets: ['localhost:8888']
      processors:
        batch:
          timeout: 1s
          send_batch_size: 1024
        memory_limiter:
          limit_mib: 512
          spike_limit_mib: 128
          check_interval: 5s
        resource:
          attributes:
            - key: deployment.environment
              value: "local"
              action: upsert
      exporters:
        prometheus:
          endpoint: "0.0.0.0:8889"
          namespace: "otel"
        otlp/tempo:
          endpoint: tempo:4317
          tls:
            insecure: true
        logging:
          loglevel: info
      service:
        pipelines:
          metrics:
            receivers: [otlp, prometheus]
            processors: [memory_limiter, resource, batch]
            exporters: [prometheus, logging]
          traces:
            receivers: [otlp]
            processors: [memory_limiter, resource, batch]
            exporters: [otlp/tempo, logging]
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: tempo
  namespace: observability
spec:
  interval: 5m
  chart:
    spec:
      chart: tempo
      version: "2.3.1"
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  values:
    tempo:
      replicas: 1
      resources:
        requests:
          memory: 1Gi
          cpu: 500m
        limits:
          memory: 2Gi
          cpu: 1000m
      storage:
        trace:
          backend: s3
          s3:
            bucket: tempo-traces
            endpoint: minio:9000
            insecure: true
            access_key: tempo
            secret_key: tempo123
    minio:
      enabled: true
      resources:
        requests:
          memory: 256Mi
          cpu: 100m
        limits:
          memory: 512Mi
          cpu: 200m
      persistence:
        enabled: true
        size: 50Gi
