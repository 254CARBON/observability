apiVersion: v1
kind: Namespace
metadata:
  name: security-policies
  labels:
    name: security-policies
---
# Pod Security Policy for observability namespace
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: observability-psp
  namespace: observability
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
---
# Network Policy for observability namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: observability-network-policy
  namespace: observability
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Allow ingress from istio-system
    - from:
        - namespaceSelector:
            matchLabels:
              name: istio-system
      ports:
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 9090
        - protocol: TCP
          port: 3000
        - protocol: TCP
          port: 3100
        - protocol: TCP
          port: 3200
    # Allow ingress from oauth2-proxy
    - from:
        - podSelector:
            matchLabels:
              app: oauth2-proxy
      ports:
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 9090
        - protocol: TCP
          port: 3000
        - protocol: TCP
          port: 3100
        - protocol: TCP
          port: 3200
    # Allow ingress from audit-logging
    - from:
        - podSelector:
            matchLabels:
              app: audit-logging
      ports:
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 9090
        - protocol: TCP
          port: 3000
        - protocol: TCP
          port: 3100
        - protocol: TCP
          port: 3200
  egress:
    # Allow egress to istio-system
    - to:
        - namespaceSelector:
            matchLabels:
              name: istio-system
      ports:
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 9090
    # Allow egress to oauth2-proxy
    - to:
        - podSelector:
            matchLabels:
              app: oauth2-proxy
      ports:
        - protocol: TCP
          port: 4180
    # Allow egress to audit-logging
    - to:
        - podSelector:
            matchLabels:
              app: audit-logging
      ports:
        - protocol: TCP
          port: 8080
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
---
# Security Context Constraints for observability
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: observability-scc
spec:
  allowHostDirVolumePlugin: false
  allowHostIPC: false
  allowHostNetwork: false
  allowHostPID: false
  allowHostPorts: false
  allowPrivilegeEscalation: false
  allowPrivilegedContainer: false
  allowedCapabilities: null
  defaultAddCapabilities: null
  fsGroup:
    type: MustRunAs
    ranges:
      - min: 1000
        max: 65535
  readOnlyRootFilesystem: false
  requiredDropCapabilities:
    - ALL
  runAsUser:
    type: MustRunAsNonRoot
    uid: 1000
  seLinuxContext:
    type: MustRunAs
  supplementalGroups:
    type: MustRunAs
    ranges:
      - min: 1000
        max: 65535
  volumes:
    - configMap
    - emptyDir
    - projected
    - secret
    - downwardAPI
    - persistentVolumeClaim
---
# Pod Disruption Budget for high availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: observability-pdb
  namespace: observability
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: oauth2-proxy
---
# Resource Quotas for observability namespace
apiVersion: v1
kind: ResourceQuota
metadata:
  name: observability-quota
  namespace: observability
spec:
  hard:
    requests.cpu: "4"
    requests.memory: "8Gi"
    limits.cpu: "8"
    limits.memory: "16Gi"
    persistentvolumeclaims: "10"
    services: "20"
    secrets: "50"
    configmaps: "50"
---
# Limit Ranges for observability namespace
apiVersion: v1
kind: LimitRange
metadata:
  name: observability-limits
  namespace: observability
spec:
  limits:
    - default:
        cpu: "500m"
        memory: "512Mi"
      defaultRequest:
        cpu: "100m"
        memory: "128Mi"
      type: Container
    - max:
        cpu: "2"
        memory: "4Gi"
      min:
        cpu: "10m"
        memory: "32Mi"
      type: Container
