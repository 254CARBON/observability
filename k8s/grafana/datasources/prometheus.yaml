apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: observability
# Preconfigured datasources for Prometheus (metrics), Tempo (traces), and Loki (logs).
# Derived fields link logs to traces using `trace_id` for cross-navigation.
data:
  prometheus.yaml: |
    apiVersion: 1
    
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        isDefault: true
        editable: true
        jsonData:
          httpMethod: POST
          manageAlerts: true
          prometheusType: Prometheus
          prometheusVersion: 2.40.0
          cacheLevel: 'High'
          disableRecordingRules: false
          incrementalQueryOverlapWindow: 10m
      - name: Tempo
        type: tempo
        access: proxy
        url: http://tempo:3200
        uid: tempo
        jsonData:
          httpMethod: GET
          tracesToLogs:
            datasourceUid: 'loki'
            tags: ['job', 'instance', 'pod', 'namespace']
            mappedTags: [{ key: 'service.name', value: 'service' }]
            mapTagNamesEnabled: false
            spanStartTimeShift: '-1h'
            spanEndTimeShift: '1h'
            filterByTraceID: false
            filterBySpanID: false
            customQuery: true
            query: 'method="$${__span.tags.method}"'
          tracesToMetrics:
            datasourceUid: 'prometheus'
            tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
            queries:
              - name: 'Sample query'
                query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
          serviceMap:
            datasourceUid: 'prometheus'
          search:
            hide: false
          nodeGraph:
            enabled: true
          lokiSearch:
            datasourceUid: 'loki'
      - name: Loki
        type: loki
        access: proxy
        url: http://loki:3100
        uid: loki
        jsonData:
          maxLines: 1000
          derivedFields:
            - datasourceUid: tempo
              matcherRegex: "trace_id=(\\w+)"
              name: TraceID
              url: "$${__value.raw}"
